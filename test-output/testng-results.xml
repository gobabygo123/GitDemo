<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="10" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-28T05:08:45 IST" name="Loan Department" finished-at="2023-01-28T05:08:45 IST" duration-ms="470">
    <groups>
      <group name="Smoke">
        <method signature="Day2.Ploan()[pri:0, instance:test.Day2@693fe6c9]" name="Ploan" class="test.Day2"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-01-28T05:08:45 IST" name="Personal Loan" finished-at="2023-01-28T05:08:45 IST" duration-ms="204">
      <class name="test.Day1">
        <test-method is-config="true" signature="befoclass()[pri:0, instance:test.Day1@1e6454ec]" started-at="2023-01-28T05:08:45 IST" name="befoclass" finished-at="2023-01-28T05:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befoclass -->
        <test-method signature="Demo()[pri:0, instance:test.Day1@1e6454ec]" started-at="2023-01-28T05:08:45 IST" name="Demo" finished-at="2023-01-28T05:08:45 IST" duration-ms="23" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Day1.Demo(Day1.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.Day1@1e6454ec]" started-at="2023-01-28T05:08:45 IST" name="lastexecution" finished-at="2023-01-28T05:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="prerequest()[pri:0, instance:test.Day2@693fe6c9]" started-at="2023-01-28T05:08:45 IST" name="prerequest" finished-at="2023-01-28T05:08:45 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequest -->
        <test-method signature="Ploan()[pri:0, instance:test.Day2@693fe6c9]" started-at="2023-01-28T05:08:45 IST" name="Ploan" finished-at="2023-01-28T05:08:45 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ploan -->
      </class> <!-- test.Day2 -->
      <class name="test.Day4">
        <test-method signature="LoginApihomeloan()[pri:0, instance:test.Day4@34f5090e]" started-at="2023-01-28T05:08:45 IST" name="LoginApihomeloan" finished-at="2023-01-28T05:08:45 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginApihomeloan -->
        <test-method signature="MobileloginhomeLoan()[pri:0, instance:test.Day4@34f5090e]" started-at="2023-01-28T05:08:45 IST" name="MobileloginhomeLoan" finished-at="2023-01-28T05:08:45 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginhomeLoan -->
        <test-method signature="WebLoginHomeLoan()[pri:0, instance:test.Day4@34f5090e]" started-at="2023-01-28T05:08:45 IST" name="WebLoginHomeLoan" finished-at="2023-01-28T05:08:45 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Personal Loan -->
    <test started-at="2023-01-28T05:08:45 IST" name="car Loan" finished-at="2023-01-28T05:08:45 IST" duration-ms="18">
      <class name="test.Day3">
        <test-method is-config="true" signature="bfrSuite()[pri:0, instance:test.Day3@a530d0a]" started-at="2023-01-28T05:08:44 IST" name="bfrSuite" finished-at="2023-01-28T05:08:45 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfrSuite -->
        <test-method is-config="true" signature="bfrMethod()[pri:0, instance:test.Day3@a530d0a]" started-at="2023-01-28T05:08:45 IST" name="bfrMethod" finished-at="2023-01-28T05:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfrMethod -->
        <test-method signature="LoginApiCarloan()[pri:0, instance:test.Day3@a530d0a]" started-at="2023-01-28T05:08:45 IST" name="LoginApiCarloan" finished-at="2023-01-28T05:08:45 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginApiCarloan -->
        <test-method is-config="true" signature="afrMethod()[pri:0, instance:test.Day3@a530d0a]" started-at="2023-01-28T05:08:45 IST" name="afrMethod" finished-at="2023-01-28T05:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afrMethod -->
        <test-method is-config="true" signature="aftrSuite()[pri:0, instance:test.Day3@a530d0a]" started-at="2023-01-28T05:08:45 IST" name="aftrSuite" finished-at="2023-01-28T05:08:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftrSuite -->
      </class> <!-- test.Day3 -->
    </test> <!-- car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
